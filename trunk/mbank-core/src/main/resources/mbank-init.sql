DROP TABLE IF EXISTS Accounts
DROP TABLE IF EXISTS Deposits
DROP TABLE IF EXISTS Activity
DROP TABLE IF EXISTS Clients

CREATE TABLE Accounts (
	account_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY, 
	client_id BIGINT not null, 
	balance DOUBLE, 
	credit_limit DOUBLE, 
	comment VARCHAR(255)
)
CREATE TABLE Clients (
	client_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY, 
	client_name VARCHAR(255), 
	password VARCHAR(255), 
	type VARCHAR(10), 
	address VARCHAR(255), 
	email VARCHAR(255), 
	phone VARCHAR(255), 
	comment VARCHAR(255),
	deleted BOOLEAN default false
)
CREATE TABLE Deposits (
	deposit_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	client_id BIGINT NOT NULL, 
	balance DOUBLE, 
	type VARCHAR(10), 
	estimated_balance DOUBLE, 
	opening_date DATE, 
	closing_date DATE
)
CREATE TABLE Activity (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	client_id BIGINT NOT NULL, 
	amount DOUBLE, 
	activity_date TIMESTAMP, 
	commission DOUBLE, 
	description VARCHAR(255)
)
CREATE TABLE Properties (
	prop_key VARCHAR(255) NOT NULL PRIMARY KEY, 
	prop_value VARCHAR(255)
)

CREATE TABLE Roles (
	role_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	role_name VARCHAR(255)
)

CREATE TABLE User_Roles (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	role_id BIGINT,
	client_id BIGINT
)

CREATE TABLE Admin_Roles (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	role_id BIGINT,
	admin_name VARCHAR(255)
)

INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('regular_deposit_rate', '10000')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('gold_deposit_rate', '100000')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('platinum_deposit_rate', '1000000')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('regular_deposit_commission', '1.5')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('gold_deposit_commission', '1.0')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('platinum_deposit_commission', '0.5')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('regular_credit_limit', '100000')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('gold_credit_limit', '1000000')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('platinum_credit_limit', '-1')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('commission_rate', '0.5')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('regular_daily_interest', '0.0014')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('gold_daily_interest', '0.0019')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('platinum_daily_interest', '0.0021')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('pre_open_fee', '0.01')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('admin_username', 'system')
INSERT INTO PROPERTIES (PROP_KEY, PROP_VALUE) VALUES ('admin_password', 'admin')

INSERT INTO ROLES(ROLE_ID, ROLE_NAME, ROLE_GROUP) VALUES (1, 'logged', 'client')
INSERT INTO ADMIN_ROLES(ID, ROLE_ID, ADMIN_NAME) VALUES (0, 1, 'system')

create trigger updater 
	after insert ON Clients 
	REFERENCING NEW ROW AS new
	FOR EACH ROW
	begin ATOMIC
		INSERT INTO USER_ROLES ("ROLE_ID", "CLIENT_ID") VALUES (0, new.client_id);
	end
	
	
	